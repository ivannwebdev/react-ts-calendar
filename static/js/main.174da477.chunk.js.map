{"version":3,"sources":["store/reducers/auth/types.ts","utils/formatDate.ts","components/EventCalendar.tsx","utils/rules.ts","hooks/useTypeSelector.ts","components/EventForm.tsx","api/api.ts","store/reducers/auth/auth-creators.ts","store/reducers/event/types.ts","store/reducers/event/event-creators.ts","router/index.ts","store/allActionCreators/allActionCreators.ts","hooks/useActions.ts","pages/Event.tsx","components/LoginForm.tsx","pages/Login.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/auth.ts","store/reducers/event/event.ts","store/reducers/reducers.ts","store/store.ts","index.tsx"],"names":["AuthActionEnum","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EventCalendar","props","dateCellRender","value","formatedDate","toDate","currentDaysEvents","events","filter","ev","map","index","description","rules","message","required","validator","_","isSameOrAfter","moment","Promise","resolve","reject","Error","useTypeSelector","useSelector","EventForm","useState","guest","author","event","setEvent","user","state","auth","onFinish","submit","username","Item","label","name","onChange","e","target","selectDate","guests","Option","justify","wrapperCol","offset","span","style","marginRight","type","htmlType","Api","axios","get","EventActionEnum","authCreators","setAuth","SET_AUTH","payload","setUser","SET_USER","setError","error","SET_ERROR","setIsLoading","isLoading","SET_IS_LOADING","login","password","dispatch","a","setTimeout","getUsers","response","mockUser","data","find","console","log","localStorage","setItem","logout","removeItem","RoutNames","eventCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","alert","createEvent","getItem","json","JSON","parse","push","stringify","fetchEvents","currentUserEvents","allActionCreators","useActions","useDispatch","bindActionCreators","Event","modalVisible","setModalVisible","useEffect","fontSize","backgroundColor","color","width","height","borderRadius","onClick","title","visible","footer","onCancel","LoginForm","setUsername","setPassword","Password","loading","Login","align","className","PublicRoutes","path","LOGIN","exact","component","PrivateRoutes","EVENT","AppRouter","isAuth","route","to","Navbar","router","useHistory","Header","theme","mode","App","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.174da477.chunk.js","sourcesContent":["import { IUser } from \"../../../models/IUser\";\r\n\r\nexport enum AuthActionEnum{\r\n    SET_AUTH = 'SET_AUTH',\r\n    SET_USER = 'SET_USER',\r\n    SET_ERROR = 'SET_ERROR',\r\n    SET_IS_LOADING= 'SET_IS_LOADING'\r\n}\r\n\r\nexport interface AuthState {\r\n    isAuth: boolean\r\n    user: IUser\r\n    isLoading: boolean\r\n    error: string\r\n\r\n}\r\n\r\nexport interface SetAuthAction {\r\n    type: AuthActionEnum.SET_AUTH,\r\n    payload: boolean\r\n}\r\n\r\nexport interface SetUserAction {\r\n    type: AuthActionEnum.SET_USER,\r\n    payload: IUser\r\n}\r\n\r\nexport interface SetErrorAction {\r\n    type: AuthActionEnum.SET_ERROR,\r\n    payload: string\r\n}\r\n\r\nexport interface SetIsLoadingAction {\r\n    type: AuthActionEnum.SET_IS_LOADING,\r\n    payload: boolean\r\n}\r\n\r\nexport type AuthAction =\r\n    SetErrorAction |\r\n    SetAuthAction |\r\n    SetUserAction |\r\n  SetIsLoadingAction ","export const formatDate = (date: Date): string => {\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth() < 9? `0${date.getMonth() + 1}`: date.getMonth() + 1\r\n    const day = date.getDate() < 9? `0${date.getDate()}` : date.getDate() \r\n    return `${year}.${month}.${day}`\r\n}","import { Calendar } from \"antd\";\r\nimport { Moment } from \"moment\";\r\nimport React, { FC, PropsWithChildren } from \"react\";\r\nimport { IEvent } from \"../models/IEvent\";\r\nimport { formatDate } from './../utils/formatDate';\r\n\r\ninterface EventCalendarProps {\r\n    events: IEvent[]\r\n}\r\n\r\nconst EventCalendar: FC<EventCalendarProps> = (props: PropsWithChildren<EventCalendarProps>) => {\r\n    \r\n    function dateCellRender(value: Moment) {\r\n        const formatedDate = formatDate(value.toDate())\r\n        const currentDaysEvents = props.events.filter(ev => ev?.date === formatedDate)\r\n        return (\r\n            <div>\r\n                {\r\n                    currentDaysEvents.map((ev, index) => <div key= {index}>\r\n                        {ev.description}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        )\r\n      }  \r\n    return(\r\n        <Calendar\r\n            dateCellRender= {dateCellRender}\r\n        />\r\n    )\r\n}\r\n\r\nexport default EventCalendar","import React from \"react\";\r\nimport moment, { Moment } from 'moment';\r\n\r\nexport const rules = {\r\n    required: (message: string = 'Это обязательное поле') => ({\r\n        required: true,\r\n        message\r\n    }),\r\n\r\n    isDateAfter: (message: string) => () => ({\r\n         validator(_:any, value: Moment){\r\n             if(value.isSameOrAfter(moment())){\r\n                 return Promise.resolve()\r\n             }\r\n             return Promise.reject(new Error(message))\r\n         }\r\n    })\r\n}\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/store\";\r\n\r\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import React, { FC, PropsWithChildren, useState } from \"react\"\r\nimport { Button, DatePicker, Form, Input, Row, Select } from 'antd';\r\nimport { rules } from \"../utils/rules\";\r\nimport { IUser } from \"../models/IUser\";\r\nimport { IEvent } from \"../models/IEvent\";\r\nimport { Moment } from \"moment\";\r\nimport { formatDate } from './../utils/formatDate';\r\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\r\n\r\ninterface EventFormProps {\r\n    guests: IUser[]\r\n    submit:(event: IEvent) => void\r\n}\r\n\r\nconst EventForm: FC<EventFormProps> = (props: PropsWithChildren<EventFormProps>) => {\r\n\r\n    const [event, setEvent] = useState<IEvent>({\r\n        guest: '',\r\n        author: '',\r\n        date: '',\r\n        description: ''\r\n    } as IEvent)\r\n\r\n    const {user} = useTypeSelector(state => state.auth)\r\n\r\n    const selectDate = (date: Moment | null) => {\r\n        if(date) {\r\n            setEvent({...event, date: formatDate(date.toDate())})\r\n        }\r\n    }\r\n\r\n    const submitForm = () => {\r\n        props.submit({...event, author: user.username})\r\n    }\r\n\r\n    return(\r\n        <Form onFinish= {submitForm}>\r\n            <Form.Item\r\n                label=\"Название события\"\r\n                name=\"description\"\r\n                rules={[rules.required()]}\r\n            >\r\n            <Input value= {event.description} onChange= {(e) => setEvent({...event, description: e.target.value})}/> \r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Дата события\"\r\n                name=\"date\"\r\n                rules={[rules.required(), rules.isDateAfter('К сожалению нельзя планировать прошлое')]}\r\n            >\r\n                <DatePicker onChange= {(date)=> {selectDate(date)}}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label= \"Выберите гостя\"\r\n                name= \"guest\"\r\n                rules= {[rules.required()]}\r\n            >\r\n                <Select onChange= {(guest: string) => setEvent({...event, guest})}>\r\n                    {props.guests.map((guest => <Select.Option key= {guest.username} value= {guest.username}>{guest.username}</Select.Option>))}\r\n                </Select>\r\n            </Form.Item>\r\n            <Row justify= 'end'>\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button style= {{marginRight: 40}} type=\"primary\" htmlType=\"submit\">\r\n                    Добавить\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n            \r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EventForm","import axios, { AxiosResponse } from \"axios\";\r\nimport { IUser } from \"../models/IUser\";\r\n\r\nexport default class Api {\r\n    static async getUsers(): Promise<AxiosResponse<IUser[]>>{\r\n        return axios.get<IUser[]>('https://gist.githubusercontent.com/ivannwebdev/adbc10764b5bb3b18b0493d2bd84962a/raw/1b5494b79894f5984a1a25156e3fa0ba127afb7f/users.json')\r\n    }\r\n}","import Api from \"../../../api/api\";\r\nimport { IUser } from \"../../../models/IUser\";\r\nimport { AppDispatch } from \"../../store\";\r\nimport { AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction } from \"./types\";\r\n\r\nexport const authCreators = {\r\n    setAuth: (auth: boolean): SetAuthAction => ({\r\n        type: AuthActionEnum.SET_AUTH,\r\n        payload: auth\r\n    }),\r\n    setUser: (user: IUser): SetUserAction => ({\r\n        type: AuthActionEnum.SET_USER,\r\n        payload: user\r\n    }),\r\n    setError: (error: string) : SetErrorAction => ({\r\n        type: AuthActionEnum.SET_ERROR,\r\n        payload: error\r\n    }),\r\n    setIsLoading: (isLoading: boolean): SetIsLoadingAction => ({\r\n        type: AuthActionEnum.SET_IS_LOADING,\r\n        payload: isLoading\r\n    }),\r\n    login: (username: string, password: string) => async(dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch(authCreators.setIsLoading(true))\r\n            setTimeout(async() => {\r\n                const response = await Api.getUsers()\r\n                const mockUser = response.data.find(user => user.username === username && user.password === password)\r\n                console.log(mockUser)\r\n                if(mockUser){\r\n                    localStorage.setItem('auth', 'true')\r\n                    localStorage.setItem('username', `${username}`)\r\n                    dispatch(authCreators.setUser(mockUser))\r\n                    dispatch(authCreators.setAuth(true))\r\n                    \r\n                } else {\r\n                    dispatch(authCreators.setError('Некорректный логин или пароль'))\r\n                }\r\n                dispatch(authCreators.setIsLoading(false))\r\n            }, 1000)\r\n    \r\n        }\r\n        catch(e){\r\n            dispatch(authCreators.setError('Ошибка'))\r\n        }\r\n    },\r\n\r\n    logout: () => async(dispatch: AppDispatch) => {\r\n        localStorage.removeItem('auth')\r\n        localStorage.removeItem('user')\r\n        dispatch(authCreators.setUser({} as IUser))\r\n        dispatch(authCreators.setAuth(false))\r\n    }\r\n}","import { IUser } from './../../../models/IUser';\r\nimport { IEvent } from './../../../models/IEvent';\r\n\r\nexport interface EventState {\r\n    guests: IUser[]\r\n    events: IEvent[]\r\n}\r\n\r\nexport enum EventActionEnum {\r\n    SET_GUESTS = 'SET_GUESTS',\r\n    SET_EVENTS = 'SET_EVENTS'\r\n}\r\n\r\nexport interface setGuestsAction {\r\n    type: EventActionEnum.SET_GUESTS\r\n    payload: IUser[]\r\n}\r\n\r\nexport interface setEventsAction {\r\n    type: EventActionEnum.SET_EVENTS\r\n    payload: IEvent[]\r\n}\r\n\r\nexport type EventAction = \r\n    setGuestsAction |\r\n    setEventsAction","import Api from \"../../../api/api\";\r\nimport { IEvent } from \"../../../models/IEvent\";\r\nimport { IUser } from \"../../../models/IUser\";\r\nimport { AppDispatch } from \"../../store\";\r\nimport { EventActionEnum, setEventsAction, setGuestsAction } from \"./types\";\r\n\r\nexport const eventCreators =  {\r\n    setGuests: (payload: IUser[]): setGuestsAction => ({type: EventActionEnum.SET_GUESTS, payload}),\r\n    setEvents: (payload: IEvent[]): setEventsAction => ({type: EventActionEnum.SET_EVENTS, payload}),\r\n    fetchGuests: () => async(dispatch: AppDispatch) => {\r\n        try {\r\n            const response = await Api.getUsers()\r\n            dispatch(eventCreators.setGuests(response.data))\r\n            \r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n    },\r\n\r\n    createEvent: (event: IEvent) => async(dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem('events') || '[]'\r\n            const json = JSON.parse(events) as IEvent[]\r\n            json.push(event)\r\n            dispatch(eventCreators.setEvents(json))\r\n            localStorage.setItem('events', JSON.stringify(json))\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n    },\r\n\r\n    fetchEvents: (username: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem('events') || '[]'\r\n            const json = JSON.parse(events) as IEvent[]\r\n            const currentUserEvents =  json.filter(ev => ev.author === username || ev.guest === username)\r\n            dispatch(eventCreators.setEvents(currentUserEvents))\r\n        } catch (e) {\r\n           \r\n        }\r\n    }\r\n}","import React from \"react\"\r\nimport Event from \"./../pages/Event\";\r\nimport Login from './../pages/Login';\r\n\r\nexport interface Route {\r\n    path: string,\r\n    component: React.ComponentType,\r\n    exact: boolean\r\n}\r\n\r\nexport enum RoutNames {\r\n    LOGIN= '/login',\r\n    EVENT= '/'\r\n}\r\n\r\nexport const PublicRoutes: Route[] = [\r\n    {path: RoutNames.LOGIN, exact: true, component: Login}\r\n]\r\n\r\nexport const PrivateRoutes: Route[] = [\r\n    {path: RoutNames.EVENT, exact: true, component: Event}\r\n]","import { authCreators } from \"../reducers/auth/auth-creators\";\r\nimport { eventCreators } from \"../reducers/event/event-creators\";\r\n\r\nexport const allActionCreators = {\r\n    ...authCreators,\r\n    ...eventCreators\r\n}","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { allActionCreators } from '../store/allActionCreators/allActionCreators';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(allActionCreators, dispatch)\r\n}","import { Button, Layout, Modal, Row } from \"antd\";\r\nimport React, { FC, useEffect, useState } from \"react\"\r\nimport EventCalendar from '../components/EventCalendar';\r\nimport EventForm from \"../components/EventForm\";\r\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\r\nimport { IEvent } from \"../models/IEvent\";\r\nimport { useActions } from './../hooks/useActions';\r\n\r\nconst Event: FC = () => {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const {fetchGuests, createEvent, fetchEvents} = useActions()\r\n    const {guests, events} = useTypeSelector(state => state.event)\r\n    const {user} = useTypeSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        fetchGuests()\r\n        fetchEvents(user.username)\r\n    }, [])\r\n\r\n    const addNewEvent = (event: IEvent) => {\r\n        setModalVisible(false)\r\n        createEvent(event)\r\n        \r\n\r\n    }\r\n\r\n    return(\r\n        <Layout>\r\n            <EventCalendar events= {events}/>\r\n            <Row justify= 'center'>\r\n                <Button style= {{fontSize: 16, backgroundColor: 'darkcyan', color: 'white', width: 135, height: 43, borderRadius: 5}} onClick= {() => setModalVisible(true)}>\r\n                    Добавить \r\n                </Button>\r\n            </Row>\r\n            <Modal\r\n                title= 'Добавить событие'\r\n                visible= {modalVisible}\r\n                footer= {null}\r\n                onCancel= {() => setModalVisible(false)}\r\n            >\r\n                <EventForm guests= {guests} submit= {addNewEvent}/>\r\n\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Event","import React, { FC, useState } from \"react\";\r\nimport { Form, Input, Button} from 'antd'\r\nimport { rules } from \"../utils/rules\";\r\nimport { useTypeSelector } from './../hooks/useTypeSelector';\r\nimport { useActions } from \"../hooks/useActions\";\r\n\r\n\r\nconst LoginForm: FC = () => {\r\n    const {login} = useActions()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const submit = () => {\r\n        \r\n        login(username, password)\r\n    }\r\n\r\n    const {isLoading, error} = useTypeSelector(state => state.auth)\r\n\r\n    return(\r\n        <Form onFinish= {submit}>\r\n          {error && <div style= {{color: 'red', fontSize: 17,}}>\r\n              Error\r\n            </div>}\r\n      <Form.Item\r\n        label=\"Логин\"\r\n        name=\"username\"\r\n        rules={[rules.required('Введите login')]}\r\n      >\r\n        <Input value= {username} onChange= {(e) => setUsername(e.target.value)}/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[rules.required('Введите пароль')]}\r\n      >\r\n        <Input.Password value= {password} onChange= {(e) => setPassword(e.target.value)}/>\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading= {isLoading}>\r\n          Войти\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import { Layout, Row } from \"antd\";\r\nimport React, {FC} from \"react\";\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nconst Login: FC = () => {\r\n    return(\r\n        <Layout>\r\n            <Row justify= 'center' align= 'middle' className= 'h100'>\r\n                    <LoginForm/>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { Route, Switch, Redirect } from \"react-router-dom\"\r\nimport { PublicRoutes, PrivateRoutes, RoutNames } from '../router';\r\nimport { useTypeSelector } from './../hooks/useTypeSelector';\r\n\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth} = useTypeSelector(state => state.auth)\r\n    return(\r\n        isAuth ? \r\n        <Switch>\r\n            {PrivateRoutes.map((route => <Route key= {route.path} {...route}/>\r\n            ))}\r\n\r\n            <Redirect to= {RoutNames.EVENT}/>\r\n        </Switch>\r\n        :\r\n        <Switch>\r\n            {PublicRoutes.map(route => <Route key= {route.path} {...route}/>\r\n            )}\r\n\r\n            <Redirect to= {RoutNames.LOGIN}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n\r\n","import { Layout, Menu, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\r\nimport { RoutNames } from \"../router\";\r\nimport { useActions } from \"../hooks/useActions\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const router = useHistory()\r\n    const {isAuth, user} = useTypeSelector(state => state.auth)\r\n    const {logout} = useActions()\r\n\r\n    return(\r\n        \r\n            <Layout.Header>\r\n                <Row justify= 'end'>\r\n                    {isAuth ?\r\n                    <> \r\n                    <div style= {{color: 'white', fontSize: 18}}>{user.username}</div>\r\n                    <Menu theme= 'dark' mode= 'horizontal'>\r\n                        <Menu.Item key= {1} onClick= { logout}>Выйти</Menu.Item>\r\n                    </Menu>\r\n                    </>\r\n                    : <>\r\n                    <Menu theme= 'dark' mode= 'horizontal'>\r\n                        <Menu.Item style= {{marginRight: 13, fontSize: 17}} onClick= {() => router.push(RoutNames.LOGIN)} key= {1}>Логин</Menu.Item>\r\n                    </Menu>\r\n                    </>\r\n                    }\r\n                </Row>\r\n            </Layout.Header>\r\n        \r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\nimport './App.css';\nimport AppRouter from './components/AppRouter';\nimport Navbar from './components/Navbar';\nimport { Layout } from 'antd';\nimport { useActions } from './hooks/useActions';\nimport { IUser } from './models/IUser';\n\nfunction App() {\n\n  const {setAuth, setUser} = useActions()\n  if(localStorage.getItem('auth')){\n    setUser({username: localStorage.getItem('username') } as IUser)\n    setAuth(true)\n  }\n\n  return (\n    <div >\n      <Layout>\n        <Navbar/>\n        <Layout.Content>\n          <AppRouter/>\n        </Layout.Content>\n      </Layout>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { IUser } from \"../../../models/IUser\";\r\nimport { AuthAction, AuthActionEnum, AuthState } from \"./types\";\r\n\r\nconst initialState: AuthState = {\r\n    isAuth: false,\r\n    user: {} as IUser,\r\n    error: '',\r\n    isLoading: false\r\n}\r\n\r\nexport default function auth (state= initialState, action: AuthAction): AuthState {\r\n    switch(action.type) {\r\n        case AuthActionEnum.SET_AUTH:\r\n            return{\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n\r\n        case AuthActionEnum.SET_ERROR:\r\n            return{\r\n                ...state,\r\n                error: action.payload,\r\n                isLoading: false\r\n            }\r\n\r\n        case AuthActionEnum.SET_IS_LOADING:\r\n            return{\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n\r\n        case AuthActionEnum.SET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default: \r\n            return {...state}\r\n    }\r\n}","import { EventAction, EventActionEnum, EventState } from \"./types\"\r\n\r\nconst initialState: EventState = {\r\n    events: [],\r\n    guests: []\r\n}\r\n\r\nexport default function eventReducer (state= initialState, action: EventAction): EventState {\r\n    switch(action.type) {\r\n        case EventActionEnum.SET_EVENTS:\r\n            return{\r\n                ...state,\r\n                events: action.payload\r\n            }\r\n        case EventActionEnum.SET_GUESTS:\r\n            return{\r\n                ...state,\r\n                guests:action.payload\r\n            }\r\n        default :\r\n            return {...state}\r\n    }\r\n}","import auth from './auth/auth';\r\nimport event from './event/event';\r\n\r\nexport default {\r\n    auth,\r\n    event\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport reducers from \"./reducers/reducers\";\r\n\r\n\r\nconst rootReducer = combineReducers(reducers)\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nconsole.log(store.getState())\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store/store';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <Provider store= {store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>\n    \n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}